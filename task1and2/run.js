"use strict"

/**
 * start - "runner"-function which is executed when the HTML-form is submitted, to inscure
 * that the dynamic route is given and can be tranformed and interfered with the polygon properly
 *
 * @return {boolean} returns false to end the function
 */
function start() {

  // Commands


  arrayfromjson = parseStringToGeojson(document.getElementById('input').value).features[0].geometry.coordinates //parses the input String to Geojson and then takes only the 2D coordinates array and stores it in arrayfromjson

  fillingPointsInOrOutside(arrayfromjson); //check whether the points are in- or outside the polygon
  fillingIntersectionIndexArray(); //check where the intersections are
  pointToPointDistances(arrayfromjson); //calculate all distances
  subsequenceDistances(); //calculate the distances of the subaequences
  fillingResultTable(); // fill the resultTable
  resultTable.sort((a, b) => b[1] - a[1]); //Sort the resultTable
  convertArrayValues(resultTable); //convert the values in the resultTable


  routeAsGeojson = routeToGeojsonLinestring(route) //converts the route to geojson
  polygonAsGeojson = polygonToGeojsonPolygon(polygon) //converts the polygon to geojson

  routeAsString = geojsonToString(routeAsGeojson) //convert the route to string
  polygonAsString = geojsonToString(polygonAsGeojson) //convert the polygon to string



  //Display the results in console for debugging
  //console.log(leftBottomCorner); //Display constants in console
  //console.log(rightTopCorner);
  /*
  console.table(pointsInOrOutsideArray); //Display arrays in console
  console.table(intersectionIndexArray);
  console.table(distancesPointToPoint);
  console.table(distancesSubsequences);
  console.log(totalDistance()); //Display total length
  console.table(resultTable); //Display final result table
  */


  //results to HTML

  document.getElementById("tbody").innerHTML = createTableHTML(resultTable); //Refers to the table body from the html-document. Inserts the code generated by the createTableHTML-function
  document.getElementById("pbody").innerHTML = "Total length: " + totalDistance() + " m"; //Refers to the paragraph of the html-document and creates the output for the total length

  appendStringToHTML(routeAsString) //Adds the given Route to the paragraph with id "container"
  appendStringToHTML(polygonAsString) //Adds the given Polygon to the paragraph with id "container"

  return false
}
